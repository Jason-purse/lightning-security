server.port=9000
management.endpoints.web.exposure.include=health,info

######################################### webmvc jackson config ########################################################
spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# ? instant?????? ...
spring.jackson.deserialization.read-date-timestamps-as-nanoseconds=false


######################################### oauth2 resource server settings ##############################################


######################################### oauth2 provider settings #####################################################


####################################################################
######################### Locale ###################################
####################################################################
spring.web.locale=en_US
spring.web.locale-resolver=fixed
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.check-template=false
#########################################################################################################################
########################################### Spring Boot JPA Properties ##################################################
#########################################################################################################################
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
##############################################################################################################################
####################################### Spring Boot JPA Hiberate Properties ##################################################
##############################################################################################################################
spring.jpa.hibernate.ddl-auto=update
# to format SQL generated in a visually pleasing manner
spring.jpa.properties.hibernate.format-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Batch
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.fetch_size=200
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
##########################################################################################################################
############################################### Database Properties ######################################################
##########################################################################################################################
spring.datasource.url=jdbc:mysql://company.generatech.ltd:3006/authorization_server_ga?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=6tfc^YHN
#lightning.web.config.json.serialize-include-non-null=true
idp.login.enable=true
spring.security.oauth2.client.provider.google.user-name-attribute=email
spring.security.oauth2.client.registration.google-idp.provider=google
spring.security.oauth2.client.registration.google-idp.client-id=${GOOGLE_CLIENT_ID:google-client-id}
spring.security.oauth2.client.registration.google-idp.client-secret=${GOOGLE_CLIENT_SECRET:google-client-secret}
spring.security.oauth2.client.registration.google-idp.scope=openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
spring.security.oauth2.client.registration.google-idp.client-name=Sign in with Google
spring.security.oauth2.client.provider.github.user-name-attribute=login
spring.security.oauth2.client.registration.github-idp.provider=github
spring.security.oauth2.client.registration.github-idp.client-id=${GITHUB_CLIENT_ID:github-client-id}
spring.security.oauth2.client.registration.github-idp.client-secret=${GITHUB_CLIENT_SECRET:github-client-secret}
spring.security.oauth2.client.registration.github-idp.scope=user:email, read:user
spring.security.oauth2.client.registration.github-idp.client-name=Sign in with GitHub
